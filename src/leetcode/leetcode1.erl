-module(leetcode1).

%%%=======================STATEMENT====================
-description("leetcode1").
-copyright('youkia,www.youkia.net').
-author("yhw,yanghaiwei@youkia.net").
-vsn(2.8).

%%%=======================EXPORT=======================
-compile(export_all).

%%%=======================INCLUDE======================

%%%=======================DEFINE======================

%%%=======================RECORD=======================

%%%=======================TYPE=========================
%%-type my_type() :: atom() | integer().


%%%=================EXPORTED FUNCTIONS=================
%% ----------------------------------------------------
%% @doc  
%%       给你一个整数数组 nums，请你返回其中位数为 偶数 的数字的个数。
%% @end
%% ----------------------------------------------------
get_even_count(List) ->
    lists:sum([X || X <- List, trunc(math:log10(X)) rem 2 =/= 0]).

%% ----------------------------------------------------
%% @doc
%%   小A 和 小B 在玩猜数字。小B 每次从 1, 2, 3 中随机选择一个，小A 每次也从 1, 2, 3 中选择一个猜。他们一共进行三次这个游戏，请返回 小A 猜对了几次？
%% @end
%% ----------------------------------------------------
cai(L1, L2) ->
    cai(L1, L2, 0).
cai([], [], Count) ->
    Count;
cai([H1 | T1], [H1 | T2], Count) ->
    cai(T1, T2, Count + 1);
cai([_H1 | T1], [_H2 | T2], Count) ->
    cai(T1, T2, Count).

%% ----------------------------------------------------
%% @doc
%%给定字符串J 代表石头中宝石的类型，和字符串 S代表你拥有的石头。 S 中每个字符代表了一种你拥有的石头的类型，你想知道你拥有的石头中有多少是宝石。
%%
%%J 中的字母不重复，J 和 S中的所有字符都是字母。字母区分大小写，因此"a"和"A"是不同类型的石头。
%% @end
%% ----------------------------------------------------
gem()->
    ok.

%% ----------------------------------------------------
%% @doc
%%  给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。
%% @end
%% ----------------------------------------------------
%%%===================LOCAL FUNCTIONS==================
%% ----------------------------------------------------
%% @doc  
%%  给你一个整数 n，请你帮忙计算并返回该整数「各位数字之积」与「各位数字之和」的差。
%% @end
%% ----------------------------------------------------
